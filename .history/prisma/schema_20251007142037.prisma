// This is your Prisma schema file.
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// User model - Single Responsibility: User authentication and profile
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  applications JobApplication[]
  documents    Document[]
  shareSettings ShareSettings?

  @@map("users")
}

// JobApplication model - Single Responsibility: Job application data
model JobApplication {
  id              String            @id @default(cuid())
  userId          String
  companyName     String
  position        String
  applicationDate DateTime
  status          ApplicationStatus @default(APPLIED)
  jobUrl          String?
  notes           String?
  followUpDate    DateTime?
  resumeId        String?
  coverLetterId   String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  // Relations
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  resume      Document? @relation("ResumeRelation", fields: [resumeId], references: [id])
  coverLetter Document? @relation("CoverLetterRelation", fields: [coverLetterId], references: [id])

  @@index([userId])
  @@index([status])
  @@index([applicationDate])
  @@map("job_applications")
}

// Document model - Single Responsibility: File management
model Document {
  id           String       @id @default(cuid())
  userId       String
  name         String
  type         DocumentType
  filePath     String
  originalName String
  size         Int
  createdAt    DateTime     @default(now())

  // Relations
  user                    User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  resumeApplications      JobApplication[]  @relation("ResumeRelation")
  coverLetterApplications JobApplication[]  @relation("CoverLetterRelation")

  @@index([userId])
  @@index([type])
  @@map("documents")
}

// ShareSettings model - Single Responsibility: Public sharing configuration
model ShareSettings {
  id            String    @id @default(cuid())
  userId        String    @unique
  shareId       String    @unique
  isActive      Boolean   @default(true)
  showNotes     Boolean   @default(false)
  showDocuments Boolean   @default(false)
  expiresAt     DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([shareId])
  @@map("share_settings")
}

// Enums
enum ApplicationStatus {
  APPLIED
  INTERVIEW
  OFFERED
  REJECTED
  WITHDRAWN
}

enum DocumentType {
  RESUME
  COVER_LETTER
}
